// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  username String  @unique @db.VarChar(255)
  password String  @db.VarChar(355)
  avatar   String? @db.VarChar(255)

  rooms         ChatRoomMembers[]
  messages      ChatMessage[]
  revokedTokens RevokedTokens[]
  publicKeys    UserPubKey[]
}

model UserPubKey {
  id      Int   @id @default(autoincrement())
  keyId   Int   @unique
  keyPair Json?

  user   User @relation(fields: [userId], references: [id])
  userId Int

  message ChatMessage[]
}

model ChatRoom {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  chatRoomMembers ChatRoomMembers[]
  messages        ChatMessage[]
}

model ChatRoomMembers {
  id Int @id @default(autoincrement())

  room   ChatRoom @relation(fields: [roomId], references: [id])
  roomId Int

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  content   String   @db.VarChar(1000)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  room   ChatRoom @relation(fields: [roomId], references: [id])
  roomId Int

  author User @relation(fields: [userId], references: [id])
  userId Int

  userPubKey   UserPubKey? @relation(fields: [userPubKeyId], references: [id])
  userPubKeyId Int?
}

model RevokedTokens {
  id    Int    @id @default(autoincrement())
  token String @db.VarChar(355)

  user   User @relation(fields: [userId], references: [id])
  userId Int
}
